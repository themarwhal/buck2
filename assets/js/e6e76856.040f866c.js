"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6818],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>u,MDXProvider:()=>c,mdx:()=>y,useMDXComponents:()=>d,withMDXComponents:()=>s});var r=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(){return i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},i.apply(this,arguments)}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var u=r.createContext({}),s=function(e){return function(n){var t=d(n.components);return r.createElement(e,i({},n,{components:t}))}},d=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},c=function(e){var n=d(e.components);return r.createElement(u.Provider,{value:n},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,i=e.originalType,a=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),s=d(t),c=l,m=s["".concat(a,".").concat(c)]||s[c]||g[c]||i;return t?r.createElement(m,p(p({ref:n},u),{},{components:t})):r.createElement(m,p({ref:n},u))}));function y(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var i=t.length,a=new Array(i);a[0]=f;var p={};for(var o in n)hasOwnProperty.call(n,o)&&(p[o]=n[o]);p.originalType=e,p[m]="string"==typeof e?e:l,a[1]=p;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},46037:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>u});var r=t(87462),l=(t(67294),t(3905));const i={id:"plugins"},a="plugins type",p={unversionedId:"api/build/plugins",id:"api/build/plugins",title:"plugins type",description:"plugins.All",source:"@site/../docs/api/build/plugins.generated.md",sourceDirName:"api/build",slug:"/api/build/plugins",permalink:"/docs/api/build/plugins",draft:!1,tags:[],version:"current",frontMatter:{id:"plugins"},sidebar:"manualSidebar",previous:{title:"label_relative_path type",permalink:"/docs/api/build/label_relative_path"},next:{title:"promise type",permalink:"/docs/api/build/promise"}},o={},u=[{value:"plugins.All",id:"pluginsall",level:2},{value:"plugins.kind",id:"pluginskind",level:2}],s={toc:u};function d(e){let{components:n,...t}=e;return(0,l.mdx)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,l.mdx)("h1",{id:"plugins-type"},(0,l.mdx)("inlineCode",{parentName:"h1"},"plugins")," type"),(0,l.mdx)("h2",{id:"pluginsall"},"plugins.All"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-python"},'plugins.All: "all_plugins"\n')),(0,l.mdx)("p",null,"A special value for use with ",(0,l.mdx)("inlineCode",{parentName:"p"},"pulls_and_pushes_plugins"),"."),(0,l.mdx)("p",null,"This value can be passed to ",(0,l.mdx)("inlineCode",{parentName:"p"},"pulls_and_pushes_plugins")," on any ",(0,l.mdx)("inlineCode",{parentName:"p"},"attr.dep()")," to indicate that\nall plugin kinds from the dep should be pulled and pushed. This is useful for rules like\n",(0,l.mdx)("inlineCode",{parentName:"p"},"alias"),"."),(0,l.mdx)("p",null,"This value is not supported on ",(0,l.mdx)("inlineCode",{parentName:"p"},"uses_plugins")," at this time, and hence it is not useful on\n",(0,l.mdx)("inlineCode",{parentName:"p"},"pulls_plugins")," either."),(0,l.mdx)("hr",null),(0,l.mdx)("h2",{id:"pluginskind"},"plugins.kind"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-python"},'def plugins.kind() -> "PluginKind"\n')),(0,l.mdx)("p",null,"Create a new plugin kind."),(0,l.mdx)("p",null,"The value returned should always be immediately bound to a global, like ",(0,l.mdx)("inlineCode",{parentName:"p"},"MyPluginKind =\nplugins.kind()")))}d.isMDXComponent=!0}}]);