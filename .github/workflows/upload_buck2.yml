name: Build and upload Buck2 binaries

on:
  push:
    branches:
      - main
      - upload-prelude-hash

jobs:
  get_prelude_hash:
    name: Get the latest prelude hash
    runs-on: ubuntu-latest
    steps:
      - name: Shallow clone buck2-prelude
        run: git clone --depth=1 https://github.com/facebook/buck2-prelude
      - name: Get latest commit hash into prelude_hash
        run: |
          mkdir artifacts/
          cd buck2-prelude/
          git rev-parse HEAD > ../artifacts/prelude_hash
      - name: Upload prelude_hash
        uses: actions/upload-artifact@v3
        with:
          path: artifacts/prelude_hash
          name: prelude_hash

  build:
    name: Build Buck2
    needs: get_prelude_hash
    strategy:
      fail-fast: false
      matrix:
        target:
          - os: 'ubuntu-22.04'
            triple: 'aarch64-unknown-linux-gnu'
            cross: true
          - os: 'ubuntu-22.04'
            triple: 'aarch64-unknown-linux-musl'
            cross: true
          - os: 'ubuntu-22.04'
            triple: 'x86_64-unknown-linux-gnu'
          # - os: 'ubuntu-22.04'
          #   triple: 'x86_64-unknown-linux-musl' # Doesn't build
          - os: 'macos-12'
            triple: 'aarch64-apple-darwin'
          - os: 'macos-12'
            triple: 'x86_64-apple-darwin'
          - os: 'windows-2022'
            triple: 'x86_64-pc-windows-msvc'
    runs-on: ${{ matrix.target.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v3
        with:
          name: prelude_hash
      - uses: SebRollen/toml-action@v1.0.1
        id: read_rust_toolchain
        with:
          file: 'rust-toolchain'
          field: 'toolchain.channel'
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ steps.read_rust_toolchain.outputs.value }}
          targets: ${{ matrix.target.triple }}
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: buck2-upload
          key: ${{ matrix.target.triple }}
      - uses: ./.github/actions/build-buck2
        with:
          target_triple: ${{ matrix.target.triple }}
          cross: ${{ matrix.target.cross }}
      - name: Move binary to artifact/ (non-Windows)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          mkdir artifacts
          zstd -z target/${{ matrix.target.triple }}/release/buck2 -o artifacts/buck2-${{ matrix.target.triple }}.zst
      - name: Move binary to artifact/ (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          mkdir artifacts
          zstd -z target/${{ matrix.target.triple }}/release/buck2.exe -o artifacts/buck2-${{ matrix.target.triple }}.exe.zst
      - name: Upload (non-Windows)
        if: runner.os != 'Windows'
        uses: actions/upload-artifact@v3
        with:
          path: artifacts/buck2-${{ matrix.target.triple }}.zst

      - name: Upload (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v3
        with:
          path: artifacts/buck2-${{ matrix.target.triple }}.exe.zst

  release:
    name: Upload builds to `latest`
    needs: build
    runs-on: ubuntu-latest
    steps:
      - run: mkdir ${{github.workspace}}/artifacts
      - uses: actions/download-artifact@v3
        with:
          path: ${{github.workspace}}/artifacts
      - name: Display structure of downloaded files
        run: |
          ls -R
        working-directory: ${{github.workspace}}/artifacts
      - uses: pyTooling/Actions/releaser@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: 'latest'
          files: ${{github.workspace}}/artifacts/**/buck2-*.zst
          rm: true
      - name: Summary
        run: |
          cat <<EOF >> $GITHUB_STEP_SUMMARY
          # Latest Build Complete! :rocket:
          For the public download links of these build artifacts, please see:
           <https://github.com/facebook/buck2/releases/tag/latest>
          EOF
